- name: delete JENKINS_HOME directory
  file:
    state: absent
    path: /var/lib/jenkins

- name: Create directories for Jenkins
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: jenkins
    group: jenkins
    recurse: yes
  with_items: "{{ jenkins_directories }}"

- name: Create directory for systemd override file
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    recurse: yes
  with_items:
    - '/etc/systemd/system/jenkins.service.d'

- name: Create limits file
  template:
    dest: "/etc/systemd/system/jenkins.service.d/override.conf"
    src: "override.conf.j2"

- name: download jenkins-plugin-manager
  get_url:
    # url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.5.0/jenkins-plugin-manager-2.9.0.jar  
    url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.12.13/jenkins-plugin-manager-2.12.13.jar
    dest: $HOME/jenkins-plugin-manager.jar

- name: Copy the plugins.yaml file
  copy:
    dest: "$HOME/plugins.yaml"
    src: "files/plugins.yml"

- name: Copy the jenkins.yaml file
  become: yes
  copy:
    dest: "/var/lib/jenkins/jenkins.yaml"
    src: "files/jenkins.yml"
  
- name: run the jenkins-plugin-manager
  become: yes
  command: "java -jar jenkins-plugin-manager.jar --jenkins-version {{ jenkins_version }} --plugin-file plugins.yaml --plugin-download-directory /var/lib/jenkins/plugins"
  args:
    chdir: /root

- name: update plugin ownership
  become: yes
  file:
    path: /var/lib/jenkins
    owner: jenkins
    group: jenkins
    state: directory
    recurse: yes

- name: start jenkins service
  become: yes
  systemd:
    name: jenkins
    state: started